# Author: Charlotte Maddinson
# Date: 25.8.2025

# load relevant packages


library(dplyr)
library(readxl)
library(ggplot2)
library(openxlsx)
library(reshape2)
library(tidyr)
library(stringr)
library(writexl)

# Aim: to calculate Brazil and Japan foodprint using a combination of FAO stat consumption data (provided by Hot or Cool), Resource Trade Earth data, and BIOVALENT footprint values. Reference year: 2022. 
# 1. Upload data from Resource Trade Earth, FAOSTAT
FAOSTAT_data_2022 <- read_excel("FAOSTAT_data_2022.xls")
Japan_RTE <- read_excel("Japan_RTE_2022.xlsx", sheet="Trades")
Brazil_RTE <- read_excel("Brazil_RTE_2022.xlsx", sheet="Trades")

# 2. Use FAOSTAT to determine the proportion of food supply from domestic supply vs imports

FAOSTAT_data_2022_clean <- FAOSTAT_data_2022 %>%
  pivot_wider(
    id_cols = c(Item, Area),
    names_from = Element,
    values_from = Value,
    values_fn = sum,                 
    values_fill = 0                 
  ) 

# 3. Match FAOSTAT and RTE food items, so that each FAOSTAT item has a corresponding RTE
# Upload matching criteria and clean so that is correctly matches
FAO_RTE_matching<- read_excel("FAO_RTE_matching.xlsx")

clean_text <- function(x) {
  x %>%
    str_replace_all("[\u00A0]", " ") %>%  # replace non-breaking space with normal space
    str_squish() %>%                      # collapse multiple spaces
    str_trim()                            # trim leading/trailing spaces
}

FAOSTAT_data_2022_clean <- FAOSTAT_data_2022_clean %>%
  mutate(Item = clean_text(as.character(Item)))

FAOSTAT_data_2022_clean <- FAOSTAT_data_2022_clean %>%
  mutate(Item = as.character(Item))

FAO_RTE_matching <- FAO_RTE_matching %>%
  mutate(FAOSTAT_name = clean_text(as.character(FAOSTAT_name)))

FAO_RTE_matching <- FAO_RTE_matching %>%
  mutate(FAOSTAT_name = as.character(FAOSTAT_name))

# Left join FAOSTAT data with matching criteria, so each product has a corresponding RTE name

FAOSTAT_data_2022_clean <- FAOSTAT_data_2022_clean %>%
  left_join(FAO_RTE_matching, by = c("Item" = "FAOSTAT_name"))


#4.  Join FAOSTAT and RTE food data
# Filter and sort Resource Trade Earth data so it is only for 2022 and weight only

Brazil_RTE_filtered <- Brazil_RTE %>%
  filter(Year == 2022) %>%
  select(Exporter, Resource, `Weight (1000kg)`)   

Japan_RTE_filtered<- Japan_RTE %>%
  filter(Year == 2022) %>%
  select(Exporter, Resource, `Weight (1000kg)`)   

# For each food product, do % of total product coming from each location

Brazil_total_weights_imported <- Brazil_RTE_filtered %>%
  group_by(Resource, Exporter) %>%
  summarise(Total_Weight = sum(`Weight (1000kg)`, na.rm = TRUE), .groups = "drop")

Brazil_percentage_locations <- Brazil_total_weights_imported  %>%
  group_by(Resource) %>%
  mutate(Percentage = (Total_Weight / sum(Total_Weight)) * 100) %>%
  ungroup()

Japan_total_weights_imported <- Japan_RTE_filtered %>%
  group_by(Resource, Exporter) %>%
  summarise(Total_Weight = sum(`Weight (1000kg)`, na.rm = TRUE), .groups = "drop")

Japan_percentage_locations <- Japan_total_weights_imported  %>%
  group_by(Resource) %>%
  mutate(Percentage = (Total_Weight / sum(Total_Weight)) * 100) %>%
  ungroup()

# Match FAOstat 'Import quantity' dataframe with percentage locations
# Separate FAO stat data to import quantity and domestic quantity sheets

FAO_imports_2022 <- FAOSTAT_data_2022_clean %>% select(Item, Area, RTE_name, `Import quantity`)
FAO_domestic_2022<- FAOSTAT_data_2022_clean %>% select(Item, Area, RTE_name, `Domestic supply quantity`)

# For domestic supply quantity, add location = brazil and location=Japan. Now suitable for matching with BIOVALENT.
FAO_domestic_2022 <- FAO_domestic_2022 %>% mutate(Exporter = Area)
FAO_domestic_brazil <- FAO_domestic_2022 %>% filter(Exporter=="Brazil")
FAO_domestic_japan <- FAO_domestic_2022 %>% filter(Exporter=="Japan")

# For import, need to combine with the RTE food data.
# separate FAO data by country for ease here?

FAO_imports_brazil <- FAO_imports_2022 %>% filter(Area=="Brazil")
FAO_imports_japan <- FAO_imports_2022 %>% filter(Area=="Japan")

# now combine
imports_brazil <- FAO_imports_brazil %>%
  left_join(
    Brazil_percentage_locations, 
    by = c("RTE_name" = "Resource"),
    relationship = "many-to-many"
  )

imports_japan <- FAO_imports_japan %>%
  left_join(
  Japan_percentage_locations, 
    by = c("RTE_name" = "Resource"),
    relationship = "many-to-many"
  )

# and now calculate total amounts for each location and food item based on percentages
imports_brazil <- imports_brazil %>%
  mutate(totalweight_perlocation = `Import quantity` * Percentage)
imports_japan <- imports_japan%>%
  mutate(totalweight_perlocation = `Import quantity` * Percentage)

# recombine with FAO domestic data

# brazil
domestic_clean_brazil <- FAO_domestic_brazil %>%
  transmute(
    Item,
    Area,
    RTE_name,
    Exporter,
    Supply = `Domestic supply quantity`,
    imported_or_domestic = "Domestic"
  )

# Imports data
imports_clean_brazil <- imports_brazil %>%
  transmute(
    Item,
    Area,
    RTE_name,
    Exporter,
    Supply = totalweight_perlocation,
    imported_or_domestic = "Imported"
  )

finaltable_brazil <- bind_rows(domestic_clean_brazil, imports_clean_brazil)

# Japan


domestic_clean_japan <- FAO_domestic_japan %>%
  transmute(
    Item,
    Area,
    RTE_name,
    Exporter,
    Supply = `Domestic supply quantity`,
    imported_or_domestic = "Domestic"
  )

# Imports data
imports_clean_japan <- imports_japan %>%
  transmute(
    Item,
    Area,
    RTE_name,
    Exporter,
    Supply = totalweight_perlocation,
    imported_or_domestic = "Imported"
  )

finaltable_japan <- bind_rows(domestic_clean_japan, imports_clean_japan)



# Data should now include total quantity of product (FAOSTAT), how much from domestic vs imported
#  the  location of imported product (from Resource Trade Earth) 
#  and the proportion of product from each location. Combining datasets so that we have this, separated for Brazil and Japan.


# 5. combining the Dataset with biodiversity footprint database
# upload matching criteria, matching FAO names with BIOVALENT names- for location and product

biovalent_fao_match_product <- read_excel("FAO_BIOVALENT_matching.xlsx", sheet= "Product")
# should product be matched based on FAOSTAT name or RTE name? FAOSTAT has more information so i think this?

biovalent_fao_match_location <- read_excel("FAO_BIOVALENT_matching.xlsx", sheet= "Location")

# Again cleaning so no issues with matching

finaltable_japan <- finaltable_japan %>%
  mutate(Item = clean_text(as.character(Item))) %>%   mutate(Exporter = clean_text(as.character(Exporter)))

finaltable_brazil <- finaltable_brazil%>%
  mutate(Item = clean_text(as.character(Item))) %>%   mutate(Exporter = clean_text(as.character(Exporter)))

biovalent_fao_match_product <- biovalent_fao_match_product %>%
  mutate(FAOSTAT_product_name = clean_text(as.character(FAOSTAT_product_name))) %>% mutate(BIOVALENT_product_name = clean_text(as.character(BIOVALENT_product_name)))

biovalent_fao_match_location <- biovalent_fao_match_location %>%
  mutate(RTE_location_name = clean_text(as.character(RTE_location_name))) %>% mutate(BIOVALENT_location_name = clean_text(as.character(BIOVALENT_location_name)))


# Joining matching criteria

finaltable_japan <- finaltable_japan %>%
  left_join(biovalent_fao_match_product, by = c("Item" = "FAOSTAT_product_name"))
finaltable_japan <- finaltable_japan %>%
  left_join(biovalent_fao_match_location, by = c("Exporter" = "RTE_location_name"))

finaltable_brazil <- finaltable_brazil %>%
  left_join(biovalent_fao_match_product, by = c("Item" = "FAOSTAT_product_name"))
finaltable_brazil <- finaltable_brazil %>%
  left_join(biovalent_fao_match_location, by = c("Exporter" = "RTE_location_name"))

# and now joining actual datasets

# uploading BIOVALENT dataset
BIOVALENT <- read_excel("BIOVALENT.xlsx")
BIOVALENT <- BIOVALENT %>%
  mutate(factor_name = clean_text(as.character(factor_name))) %>%   mutate(food_location = clean_text(as.character(food_location)))

biovalent_table_japan <- finaltable_japan %>%   left_join(BIOVALENT, by = c("BIOVALENT_product_name" = "factor_name", "BIOVALENT_location_name"="food_location"))
biovalent_table_brazil <- finaltable_brazil %>%   left_join(BIOVALENT, by = c("BIOVALENT_product_name" = "factor_name", "BIOVALENT_location_name"="food_location"))


# These are the final table summaries for analysis
biovalent_table_japan_summary <- biovalent_table_japan %>% group_by(Item) %>% mutate(totalimpact=(Supply*impact_factor)) %>% select(Item, Area, Exporter, Supply, imported_or_domestic, totalimpact, impact_factor)
biovalent_table_brazil_summary <- biovalent_table_brazil %>% group_by(Item) %>% mutate(totalimpact=(Supply*impact_factor)) %>% select(Item, Area, Exporter, Supply, imported_or_domestic, totalimpact, impact_factor)


# now finally trying to summarise them 
biovalent_table_japan_summary_peritem <- biovalent_table_japan_summary %>%
  group_by(Item) %>%
  summarise(totalimpact = sum(totalimpact, na.rm = TRUE), totalconsumption=sum(Supply, na.rm=TRUE), impactintensity=mean(impact_factor , na.rm=TRUE))

# can't actually use this mean value as doesnt include weightings.

biovalent_table_brazil_summary_peritem <- biovalent_table_brazil_summary %>%
  group_by(Item) %>%
  summarise(totalimpact = sum(totalimpact, na.rm = TRUE), totalconsumption=sum(Supply, na.rm=TRUE),  impactintensity=mean(impact_factor ,na.rm=TRUE))#

# current issue is the FAOstat data seems wronf, so im using the one provided by HotOrCool for now
